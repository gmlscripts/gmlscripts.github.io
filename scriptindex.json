{"base_convert": {"path": "/Computation/Base_Conversion/base_convert.md", "signature": "base_convert(number, oldbase, newbase)", "summary": "Returns a number converted from one base as another base.", "timestamp": 1642526414}, "bin_to_dec": {"path": "/Computation/Base_Conversion/bin_to_dec.md", "signature": "bin_to_dec(bin)", "summary": "Returns an integer converted from a binary string.", "timestamp": 1642526414}, "bin_to_fraction": {"path": "/Computation/Base_Conversion/bin_to_fraction.md", "signature": "bin_to_fraction(bin)", "summary": "Returns a decimal fraction converted from a binary string.", "timestamp": 1642526414}, "bin_to_hex": {"path": "/Computation/Base_Conversion/bin_to_hex.md", "signature": "bin_to_hex(bin)", "summary": "Returns a hexadecimal string converted from a binary string.", "timestamp": 1642526414}, "dec_to_bin": {"path": "/Computation/Base_Conversion/dec_to_bin.md", "signature": "dec_to_bin(dec, len)", "summary": "Returns a given value as a string of binary digits.", "timestamp": 1642526414}, "dec_to_hex": {"path": "/Computation/Base_Conversion/dec_to_hex.md", "signature": "dec_to_hex(dec, len)", "summary": "Returns a given value as a string of hexadecimal digits.", "timestamp": 1735752941}, "dec_to_oct": {"path": "/Computation/Base_Conversion/dec_to_oct.md", "signature": "dec_to_oct(dec, len)", "summary": "Returns a given value as a string of octal digits.", "timestamp": 1642526414}, "dec_to_roman": {"path": "/Computation/Base_Conversion/dec_to_roman.md", "signature": "dec_to_roman(num)", "summary": "Returns a Roman numeral string converted from an integer.", "timestamp": 1642526414}, "fraction_to_bin": {"path": "/Computation/Base_Conversion/fraction_to_bin.md", "signature": "fraction_to_bin(fraction, length)", "summary": "Returns a binary string converted from a decimal fraction.", "timestamp": 1642526414}, "hex_to_bin": {"path": "/Computation/Base_Conversion/hex_to_bin.md", "signature": "hex_to_bin(hex)", "summary": "Returns a binary string converted from a hexadecimal string.", "timestamp": 1642526414}, "hex_to_dec": {"path": "/Computation/Base_Conversion/hex_to_dec.md", "signature": "hex_to_dec(hex)", "summary": "Returns an integer converted from an hexadecimal string.", "timestamp": 1642526414}, "oct_to_dec": {"path": "/Computation/Base_Conversion/oct_to_dec.md", "signature": "oct_to_dec(oct)", "summary": "Returns an integer converted from an octal string.", "timestamp": 1642526414}, "roman_to_dec": {"path": "/Computation/Base_Conversion/roman_to_dec.md", "signature": "roman_to_dec(roman)", "summary": "Returns an integer converted from a Roman numeral string.", "timestamp": 1642526414}, "bitwise_reverse16": {"path": "/Computation/Bitwise/bitwise_reverse16.md", "signature": "bitwise_reverse16(n)", "summary": "Returns the given 16-bit integer with bits in reverse order.", "timestamp": 1642526415}, "bitwise_reverse32": {"path": "/Computation/Bitwise/bitwise_reverse32.md", "signature": "bitwise_reverse32(n)", "summary": "Returns the given 32-bit integer with bits in reverse order.", "timestamp": 1642526415}, "bitwise_reverse8": {"path": "/Computation/Bitwise/bitwise_reverse8.md", "signature": "bitwise_reverse8(n)", "summary": "Returns the given 8-bit integer with bits in reverse order.", "timestamp": 1642526415}, "bitwise_rol": {"path": "/Computation/Bitwise/bitwise_rol.md", "signature": "bitwise_rol(n, count, size)", "summary": "Returns the given integer rotated left a number of bit positions.", "timestamp": 1642526415}, "bitwise_ror": {"path": "/Computation/Bitwise/bitwise_ror.md", "signature": "bitwise_ror(n, count, size)", "summary": "Returns the given integer rotated right a number of bit positions.", "timestamp": 1642526415}, "bit_clear": {"path": "/Computation/Bitwise/bit_clear.md", "signature": "bit_clear(bitfield, bit)", "summary": "Returns a bitfield with a given bit cleared to 0.", "timestamp": 1642526415}, "bit_set": {"path": "/Computation/Bitwise/bit_set.md", "signature": "bit_set(bitfield, bit)", "summary": "Returns a bitfield with a given bit set to 1.", "timestamp": 1642526415}, "bit_test": {"path": "/Computation/Bitwise/bit_test.md", "signature": "bit_test(bitfield, bit)", "summary": "Returns the value of a selected bit within a bitfield.", "timestamp": 1642526415}, "bit_toggle": {"path": "/Computation/Bitwise/bit_toggle.md", "signature": "bit_toggle(bitfield, bit)", "summary": "Returns a bitfield with a given bit toggled.", "timestamp": 1642526415}, "b64_to_bytes": {"path": "/Computation/Data_Encoding/b64_to_bytes.md", "signature": "b64_to_bytes(b64)", "summary": "Returns a string of raw bytes, 8 bits each.", "timestamp": 1735799436}, "bin_to_bytes": {"path": "/Computation/Data_Encoding/bin_to_bytes.md", "signature": "bin_to_bytes(bin)", "summary": "Returns a string of raw bytes (8 bits each) representing the given binary string.", "timestamp": 1403912226}, "bytes_to_b64": {"path": "/Computation/Data_Encoding/bytes_to_b64.md", "signature": "bytes_to_b64(str)", "summary": "Returns a string of base64 digits (RFC 3548), 6 bits each.", "timestamp": 1403933430}, "bytes_to_bin": {"path": "/Computation/Data_Encoding/bytes_to_bin.md", "signature": "bytes_to_bin(str)", "summary": "Returns a string of binary digits, 1 bit each.", "timestamp": 1403933420}, "bytes_to_hex": {"path": "/Computation/Data_Encoding/bytes_to_hex.md", "signature": "bytes_to_hex(str)", "summary": "Returns a string of hexadecimal digits, 4 bits each.", "timestamp": 1403933554}, "decode_real_double": {"path": "/Computation/Data_Encoding/decode_real_double.md", "signature": "decode_real_double(str)", "summary": "Returns a real value decoded from the given string of raw bytes in IEEE 754 double precision format.", "timestamp": 1403934296}, "encode_real_double": {"path": "/Computation/Data_Encoding/encode_real_double.md", "signature": "encode_real_double(n)", "summary": "Returns a string of raw bytes representing the given number encoded in IEEE 754 double precision format.", "timestamp": 1403934258}, "hex_to_bytes": {"path": "/Computation/Data_Encoding/hex_to_bytes.md", "signature": "hex_to_bytes(hex)", "summary": "Returns a string of raw bytes (8 bits each) representing the given hexadecimal string.", "timestamp": 1403912410}, "value_min_bits": {"path": "/Computation/Data_Encoding/value_min_bits.md", "signature": "value_min_bits(n,size)", "summary": "Returns the smallest number of words of a given size that can be used to store a given value.", "timestamp": 1424059974}, "word_max_value": {"path": "/Computation/Data_Encoding/word_max_value.md", "signature": "word_max_value(length,size)", "summary": "Returns the largest unsigned integer that can be stored in a given number of words of a given size.", "timestamp": 1424059973}, "cambridge_encode": {"path": "/Computation/Data_Encryption/cambridge_encode.md", "signature": "cambridge_encode(str, alphabet)", "summary": "Returns given string with the interior letters of each word scrambled.", "timestamp": 1656925401}, "rc4": {"path": "/Computation/Data_Encryption/rc4.md", "signature": "rc4(str,key)", "summary": "Returns the given string encrypted/decrypted with the RC4 algorithm using the given key.", "timestamp": 1403935334}, "rot13": {"path": "/Computation/Data_Encryption/rot13.md", "signature": "rot13(str)", "summary": "Returns the given string transformed with the ROT13 algorithm.", "timestamp": 1742370075}, "vigenere_ascii": {"path": "/Computation/Data_Encryption/vigenere_ascii.md", "signature": "vigenere_ascii(in,key,mode)", "summary": "Returns the given string enciphered or deciphered using a simple Vigenere style cipher, and filtering out non-printable characters.", "timestamp": 1403948852}, "vigenere_cipher": {"path": "/Computation/Data_Encryption/vigenere_cipher.md", "signature": "vigenere_cipher(in,key,mode)", "summary": "Returns the given string enciphered or deciphered using a Vigenere style cipher.", "timestamp": 1403948934}, "crc16": {"path": "/Computation/Data_Hashing/crc16.md", "signature": "crc16(str [,mode])", "summary": "Returns a CRC16-CCITT hash value for a given string.", "timestamp": 1424059825}, "md2": {"path": "/Computation/Data_Hashing/md2.md", "signature": "md2(str)", "summary": "Returns an MD2 hash (RFC 1319) computed from a given string.", "timestamp": 1424059827}, "soundex": {"path": "/Computation/Data_Hashing/soundex.md", "signature": "soundex(str)", "summary": "Returns the Soundex value of the given string.", "timestamp": 1424059835}, "date_format": {"path": "/Computation/Date-Time/date_format.md", "signature": "date_format(format, datetime)", "summary": "Returns a formatted string generated from a date-time.", "timestamp": 1737925786}, "date_get_easter": {"path": "/Computation/Date-Time/date_get_easter.md", "signature": "date_get_easter(year)", "summary": "Returns the date-time of Easter for the given year.", "timestamp": 1654413323}, "time_string": {"path": "/Computation/Date-Time/time_string.md", "signature": "time_string(format, sep)", "summary": "Returns the system time as a string in 12 or 24 hour \"HH:MM:SS\" format.", "timestamp": 1654415562}, "unix_timestamp": {"path": "/Computation/Date-Time/unix_timestamp.md", "signature": "unix_timestamp(datetime)", "summary": "Returns a Unix timestamp for the current or given GameMaker datetime.", "timestamp": 1654416899}, "cone_volume": {"path": "/Computation/Geometry/cone_volume.md", "signature": "cone_volume(radius, height)", "summary": "Returns the volume of a cone of a given radius and height.", "timestamp": 1642526415}, "is_clockwise": {"path": "/Computation/Geometry/is_clockwise.md", "signature": "is_clockwise(x1, y1, x2, y2, x3, y3)", "summary": "Returns true if the given points are in clockwise order.", "timestamp": 1737925901}, "lines_intersect": {"path": "/Computation/Geometry/lines_intersect.md", "signature": "lines_intersect(x1, y1, x2, y2, x3, y3, x4, y4, segment)", "summary": "Returns a scalar (t) that indicates if two lines or segments intersect.", "timestamp": 1642526415}, "line_get_slope": {"path": "/Computation/Geometry/line_get_slope.md", "signature": "line_get_slope(x1,y1,x2,y2)", "summary": "Returns the slope of the given line.", "timestamp": 1403767680}, "point_in_polygon": {"path": "/Computation/Geometry/point_in_polygon.md", "signature": "point_in_polygon(x, y, polygon)", "summary": "Returns true if test point is inside the given 2D polygon.", "timestamp": 1642526415}, "point_line_distance": {"path": "/Computation/Geometry/point_line_distance.md", "signature": "point_line_distance(px,py,x1,y1,x2,y2,segment)", "summary": "Returns the distance from the given point to the given line.", "timestamp": 1500005371}, "polygon_area": {"path": "/Computation/Geometry/polygon_area.md", "signature": "polygon_area(polygon)", "summary": "Returns the internal area of the given polygon.", "timestamp": 1403767764}, "polygon_centroid": {"path": "/Computation/Geometry/polygon_centroid.md", "signature": "polygon_centroid(polygon)", "summary": "Returns the centroid of a given 2D polygon as a ds_list containing a coordiate pair.", "timestamp": 1403767776}, "polygon_to_triangles": {"path": "/Computation/Geometry/polygon_to_triangles.md", "signature": "polygon_to_triangles(polygon)", "summary": "Returns a list of triangles created from a given 2D polygon.", "timestamp": 1403767788}, "sphere_volume": {"path": "/Computation/Geometry/sphere_volume.md", "signature": "sphere_volume(radius)", "summary": "Returns the volume of a sphere of a given radius.", "timestamp": 1435722693}, "triangle_side_area": {"path": "/Computation/Geometry/triangle_side_area.md", "signature": "triangle_side_area(side1,side2,side3)", "summary": "Returns the area of triangle given the length of three sides.", "timestamp": 1435726318}, "bias": {"path": "/Computation/Parametric_Functions/bias.md", "signature": "bias(b, x)", "summary": "Returns the given value with a bias function applied to it.", "timestamp": 1654384486}, "boxstep": {"path": "/Computation/Parametric_Functions/boxstep.md", "signature": "boxstep(a, b, x)", "summary": "Returns 0 when (x <= a), 1 when (x >= b), a linear transition from 0 to 1 when (a < x < b), or (-1) on error (a == b).", "timestamp": 1661986333}, "gain": {"path": "/Computation/Parametric_Functions/gain.md", "signature": "gain(g, x)", "summary": "Returns the given value with a gain function applied to it.", "timestamp": 1654384532}, "gammacorrect": {"path": "/Computation/Parametric_Functions/gammacorrect.md", "signature": "gammacorrect(gamma, x)", "summary": "Returns the given value with gamma correction applied to it.", "timestamp": 1654384554}, "map_range": {"path": "/Computation/Parametric_Functions/map_range.md", "signature": "map_range(x, a1, a2, b1, b2)", "summary": "Returns a value remapped from one range to another.", "timestamp": 1713598807}, "pulse": {"path": "/Computation/Parametric_Functions/pulse.md", "signature": "pulse(a, b, x)", "summary": "Returns 1 when (a <= x <= b), 0 otherwise.", "timestamp": 1654384565}, "smoothstep": {"path": "/Computation/Parametric_Functions/smoothstep.md", "signature": "smoothstep(a, b, x)", "summary": "Returns 0 when (x <= a), 1 when (x >= b), a smooth transition from 0 to 1 otherwise.", "timestamp": 1654438833}, "spline": {"path": "/Computation/Parametric_Functions/spline.md", "signature": "spline(t, knotlist)", "summary": "Returns the Catmull-Rom interpolation of the given knot values at the given parameter position.", "timestamp": 1654384612}, "spline4": {"path": "/Computation/Parametric_Functions/spline4.md", "signature": "spline4(t, knot1, knot2, knot3, knot4)", "summary": "Returns the Catmull-Rom interpolation of the given knot values at the given parameter position.", "timestamp": 1654384623}, "step": {"path": "/Computation/Parametric_Functions/step.md", "signature": "step(a, x)", "summary": "Returns 0 when (x < a), 1 otherwise.", "timestamp": 1654384636}, "combination": {"path": "/Computation/Probability/combination.md", "signature": "combination(set, subset)", "summary": "Returns the number of unique subsets created from all combinations of a number of elements.", "timestamp": 1656266660}, "erf": {"path": "/Computation/Probability/erf.md", "signature": "erf(x)", "summary": "Returns the probability that a Gaussian random number falls within a given range.", "timestamp": 1656270354}, "exp_dist": {"path": "/Computation/Probability/exp_dist.md", "signature": "exp_dist(m)", "summary": "Returns a random number with exponential distribution.", "timestamp": 1656202971}, "factorial": {"path": "/Computation/Probability/factorial.md", "signature": "factorial(number)", "summary": "Returns the factorial of a given number.", "timestamp": 1656199321}, "gauss": {"path": "/Computation/Probability/gauss.md", "signature": "gauss(m, sd)", "summary": "Returns a pseudo-random number with an exact Gaussian distribution.", "timestamp": 1656203380}, "permutation": {"path": "/Computation/Probability/permutation.md", "signature": "permutation(set, subset)", "summary": "Returns the number of unique subsets created from all permutations of a number of elements.", "timestamp": 1656266591}, "random_weighted": {"path": "/Computation/Probability/random_weighted.md", "signature": "random_weighted(p0 [, p1, ..., pN])", "summary": "Returns a randomly selected index based on their given relative probabilities.", "timestamp": 1656201067}, "roll_dice": {"path": "/Computation/Probability/roll_dice.md", "signature": "roll_dice(num, sides)", "summary": "Returns the sum of a number of die rolls using dice with a given number of sides.", "timestamp": 1656201430}, "acos": {"path": "/Computation/Real_Numbers/acos.md", "signature": "acos(rad, n)", "summary": "Returns the arccosine of a given angle for the nth repetition.", "timestamp": 1657733086}, "asin": {"path": "/Computation/Real_Numbers/asin.md", "signature": "asin(rad, n)", "summary": "Returns the arcsine of a given angle for the nth repetition.", "timestamp": 1657733102}, "factor": {"path": "/Computation/Real_Numbers/factor.md", "signature": "factor(num)", "summary": "Returns an array containing the prime factors of a given integer.", "timestamp": 1657736489}, "factor_quadratic": {"path": "/Computation/Real_Numbers/factor_quadratic.md", "signature": "factor_quadratic(b, c)", "summary": "Returns a string of factors for any quadratic equation (ax^2+bx+c=0), where a = 1 and b and c are integers.", "timestamp": 1657737001}, "fibonacci": {"path": "/Computation/Real_Numbers/fibonacci.md", "signature": "fibonacci(n)", "summary": "Returns the nth number of the Fibonacci sequence.", "timestamp": 1657733189}, "gcd": {"path": "/Computation/Real_Numbers/gcd.md", "signature": "gcd(a,b)", "summary": "Returns the greatest common divisor of the given integers.", "timestamp": 1657729539}, "is_even": {"path": "/Computation/Real_Numbers/is_even.md", "signature": "is_even(value)", "summary": "Returns true if a given value is even, false otherwise.", "timestamp": 1657729412}, "is_factor": {"path": "/Computation/Real_Numbers/is_factor.md", "signature": "is_factor(divisor, value)", "summary": "Returns true if a given divisor is a factor of a given value, false otherwise.", "timestamp": 1657733379}, "is_odd": {"path": "/Computation/Real_Numbers/is_odd.md", "signature": "is_odd(value)", "summary": "Returns true if a given value is odd, false otherwise.", "timestamp": 1657733423}, "is_power": {"path": "/Computation/Real_Numbers/is_power.md", "signature": "is_power(value, base)", "summary": "Returns true if a given value is a power of the a given base, or false if it is not (or if it cannot be determined).", "timestamp": 1658714077}, "lcm": {"path": "/Computation/Real_Numbers/lcm.md", "signature": "lcm(a, b)", "summary": "Returns the least common multiple of the given integers.", "timestamp": 1657725757}, "next_pow2": {"path": "/Computation/Real_Numbers/next_pow2.md", "signature": "next_pow2(n)", "summary": "Returns the next power-of-two greater than or equal to a given value.", "timestamp": 1657725408}, "round_fixed": {"path": "/Computation/Real_Numbers/round_fixed.md", "signature": "round_fixed(number, places)", "summary": "Returns a given number rounded to the a number of places.", "timestamp": 1657725247}, "select": {"path": "/Computation/Real_Numbers/select.md", "signature": "select(n, choice0, choice1, choice2, ...)", "summary": "Returns an argument selected by n.", "timestamp": 1657733819}, "select_index": {"path": "/Computation/Real_Numbers/select_index.md", "signature": "select_index(value, choice0, choice1, choice2, ...)", "summary": "Returns the index of an argument matching a given value.", "timestamp": 1657733799}, "select_relative": {"path": "/Computation/Real_Numbers/select_relative.md", "signature": "select_relative(current, delta, choice0, choice1, choice2, ...)", "summary": "Returns an argument in a position relative to a given value.", "timestamp": 1657733814}, "select_relative_wrap": {"path": "/Computation/Real_Numbers/select_relative_wrap.md", "signature": "select_relative_wrap(current, delta, choice0, choice1, choice2, ...)", "summary": "Returns an argument in a position relative to a given value.", "timestamp": 1657733807}, "sum_interval": {"path": "/Computation/Real_Numbers/sum_interval.md", "signature": "sum_interval(m, n)", "summary": "Returns the sum of consecutive integers between m and n (inclusive).", "timestamp": 1657733824}, "toggle": {"path": "/Computation/Real_Numbers/toggle.md", "signature": "toggle(b)", "summary": "Returns the given Boolean value negated.", "timestamp": 1657720810}, "number_format": {"path": "/Computation/Strings/number_format.md", "signature": "number_format(number, places, decimal, thousands)", "summary": "Returns a number as a string with thousands and decimal markers.", "timestamp": 1656495034}, "speakable_password": {"path": "/Computation/Strings/speakable_password.md", "signature": "speakable_password(length)", "summary": "Returns a random speakable password of a given length.", "timestamp": 1656284550}, "string_add_spaces": {"path": "/Computation/Strings/string_add_spaces.md", "signature": "string_add_spaces(str)", "summary": "Returns given string with spaces inserted between each character.", "timestamp": 1656319293}, "string_extract": {"path": "/Computation/Strings/string_extract.md", "signature": "string_extract(str, sep, index)", "summary": "Returns the element at given index within a string of elements.", "timestamp": 1656279871}, "string_left": {"path": "/Computation/Strings/string_left.md", "signature": "string_left(str, num)", "summary": "Returns a number of characters from the start of a string.", "timestamp": 1656280236}, "string_limit": {"path": "/Computation/Strings/string_limit.md", "signature": "string_limit(str, len, ext)", "summary": "Returns a given string, truncated if it exceeds a certain length.", "timestamp": 1656285918}, "string_lpad": {"path": "/Computation/Strings/string_lpad.md", "signature": "string_lpad(str, len, pad)", "summary": "Returns a string padded on its left to a given length.", "timestamp": 1656495051}, "string_ltrim": {"path": "/Computation/Strings/string_ltrim.md", "signature": "string_ltrim(str, trim)", "summary": "Returns given string with whitespace stripped from its start.", "timestamp": 1656280291}, "string_nato": {"path": "/Computation/Strings/string_nato.md", "signature": "string_nato(text)", "summary": "Returns a given string as expressed by the NATO phonetic alphabet.", "timestamp": 1656280302}, "string_parse": {"path": "/Computation/Strings/string_parse.md", "signature": "string_parse(str, token, ignore)", "summary": "Returns a list of token-separated substrings from a given string.", "timestamp": 1656280324}, "string_parse_number": {"path": "/Computation/Strings/string_parse_number.md", "signature": "string_parse_number(str, token, ignore)", "summary": "Returns number of token-separated substrings from a given string.", "timestamp": 1656280334}, "string_parse_single": {"path": "/Computation/Strings/string_parse_single.md", "signature": "string_parse_single(str, token, n, ignore)", "summary": "Returns the nth token-separated substring from a given string.", "timestamp": 1656280345}, "string_random": {"path": "/Computation/Strings/string_random.md", "signature": "string_random(str, count)", "summary": "Returns a string of a given length composed of characters randomly selected from a given set.", "timestamp": 1656279791}, "string_remove_whitespace": {"path": "/Computation/Strings/string_remove_whitespace.md", "signature": "string_remove_whitespace(str, sub)", "summary": "Consolidates and removes all whitespace from a string, optionally replacing it with a character or string.", "timestamp": 1656495061}, "string_reverse": {"path": "/Computation/Strings/string_reverse.md", "signature": "string_reverse(str)", "summary": "Returns a given string with the characters in reverse order.", "timestamp": 1656280374}, "string_right": {"path": "/Computation/Strings/string_right.md", "signature": "string_right(str, num)", "summary": "Returns a number of characters from the end of a string.", "timestamp": 1656280384}, "string_rpad": {"path": "/Computation/Strings/string_rpad.md", "signature": "string_rpad(str, len, pad)", "summary": "Returns a string padded on its right to a given length.", "timestamp": 1656495109}, "string_rpos": {"path": "/Computation/Strings/string_rpos.md", "signature": "string_rpos(substr, str)", "summary": "Returns the right-most position of a substring within a string.", "timestamp": 1656280444}, "string_rtrim": {"path": "/Computation/Strings/string_rtrim.md", "signature": "string_rtrim(str, trim)", "summary": "Returns given string with whitespace stripped from its end.", "timestamp": 1656280475}, "string_shuffle": {"path": "/Computation/Strings/string_shuffle.md", "signature": "string_shuffle(str)", "summary": "Returns a given string with charactars shuffled.", "timestamp": 1656280487}, "string_split": {"path": "/Computation/Strings/string_split.md", "signature": "string_split(str, len, brk)", "summary": "Returns a string with break characters inserted at a given interval.", "timestamp": 1656495125}, "string_stagger_case": {"path": "/Computation/Strings/string_stagger_case.md", "signature": "string_stagger_case(str, spaces, first)", "summary": "Returns a string with the letters in staggered case, such as: \"hElLo! hOw ArE yOu ToDaY?\"", "timestamp": 1656495145}, "string_trim": {"path": "/Computation/Strings/string_trim.md", "signature": "string_trim(str, trim)", "summary": "Returns given string with whitespace stripped from its start and end.", "timestamp": 1656280527}, "string_ucfirst": {"path": "/Computation/Strings/string_ucfirst.md", "signature": "string_ucfirst(str)", "summary": "Returns a string with the first character capitalized.", "timestamp": 1656280536}, "string_ucwords": {"path": "/Computation/Strings/string_ucwords.md", "signature": "string_ucwords(str)", "summary": "Returns a string with each word capitalized.", "timestamp": 1656280550}, "string_wordwrap": {"path": "/Computation/Strings/string_wordwrap.md", "signature": "string_wordwrap(str, len, brk, cut)", "summary": "Returns a string with break characters inserted between words at a given character interval.", "timestamp": 1656495220}, "array_select_relative": {"path": "/Data_Structures/Arrays/array_select_relative.md", "signature": "array_select_relative(current, delta, choices)", "summary": "Returns an array element in a position relative to a given value.", "timestamp": 1657799101}, "array_select_relative_wrap": {"path": "/Data_Structures/Arrays/array_select_relative_wrap.md", "signature": "array_select_relative_wrap(current, delta, choices)", "summary": "Returns an array element in a position relative to a given value.", "timestamp": 1657799095}, "explode": {"path": "/Data_Structures/Arrays/explode.md", "signature": "explode(del, str)", "summary": "Returns an array of strings parsed from a given string of elements separated by a delimiter.", "timestamp": 1657798419}, "explode_real": {"path": "/Data_Structures/Arrays/explode_real.md", "signature": "explode_real(delimiter,string)", "summary": "Returns an array of real values parsed from a given string of elements separated by a delimiter.", "timestamp": 1657798429}, "implode": {"path": "/Data_Structures/Arrays/implode.md", "signature": "implode(del, arr)", "summary": "Returns a string of elements from a given array of strings and separated by a delimiter.", "timestamp": 1657798593}, "implode_real": {"path": "/Data_Structures/Arrays/implode_real.md", "signature": "implode_real(del, arr)", "summary": "Returns a string of elements from a given array of real values and separated by a delimiter.", "timestamp": 1657798475}, "ds_grid_delete_column": {"path": "/Data_Structures/Grids/ds_grid_delete_column.md", "signature": "ds_grid_delete_column(grid, col)", "summary": "Deletes from a grid the column at a given column index.", "timestamp": 1654588298}, "ds_grid_delete_row": {"path": "/Data_Structures/Grids/ds_grid_delete_row.md", "signature": "ds_grid_delete_row(grid, row)", "summary": "Deletes from a grid the row at a given row index.", "timestamp": 1654588281}, "ds_grid_draw": {"path": "/Data_Structures/Grids/ds_grid_draw.md", "signature": "ds_grid_draw(grid, x, y)", "summary": "Draws the data of a given grid at a screen location.", "timestamp": 1654590547}, "ds_grid_duplicate": {"path": "/Data_Structures/Grids/ds_grid_duplicate.md", "signature": "ds_grid_duplicate(grid)", "summary": "Returns a duplicate of the given grid.", "timestamp": 1736220141}, "ds_grid_filter_gaussian": {"path": "/Data_Structures/Grids/ds_grid_filter_gaussian.md", "signature": "ds_grid_filter_gaussian(grid, sigma)", "summary": "Performs a Gaussian convolution on a given grid.", "timestamp": 1654590427}, "ds_grid_filter_gaussian_wrap": {"path": "/Data_Structures/Grids/ds_grid_filter_gaussian_wrap.md", "signature": "ds_grid_filter_gaussian_wrap(grid, sigma)", "summary": "Performs a Gaussian convolution on a given grid, wrapping around the boundaries of the grid if needed.", "timestamp": 1654590331}, "ds_grid_flood_fill": {"path": "/Data_Structures/Grids/ds_grid_flood_fill.md", "signature": "ds_grid_flood_fill(grid, x, y, val)", "summary": "Fills a bounded area within a grid with a given value.", "timestamp": 1654632311}, "ds_grid_get_bicubic": {"path": "/Data_Structures/Grids/ds_grid_get_bicubic.md", "signature": "ds_grid_get_bicubic(grid, x, y)", "summary": "Returns the bicubic interpolation of the sixteen grid cells surrounding the given fractional coordinate.", "timestamp": 1654587854}, "ds_grid_get_bilinear": {"path": "/Data_Structures/Grids/ds_grid_get_bilinear.md", "signature": "ds_grid_get_bilinear(grid, x, y)", "summary": "Returns the bilinear interpolation of the four grid cells surrounding a given fractional coordinate.", "timestamp": 1654623922}, "ds_grid_mirror": {"path": "/Data_Structures/Grids/ds_grid_mirror.md", "signature": "ds_grid_mirror(grid, horiz, vert)", "summary": "Rearranges the elements of a given grid by mirroring horizontally and/or vertically.", "timestamp": 1654588165}, "ds_grid_swap_columns": {"path": "/Data_Structures/Grids/ds_grid_swap_columns.md", "signature": "ds_grid_swap_columns(grid, col1, col2)", "summary": "Exchanges the contents of two entire grid columns.", "timestamp": 1654588058}, "ds_grid_swap_rows": {"path": "/Data_Structures/Grids/ds_grid_swap_rows.md", "signature": "ds_grid_swap_rows(grid, row1, row2)", "summary": "Exchanges the contents of two entire grid rows.", "timestamp": 1654588049}, "ds_grid_translate": {"path": "/Data_Structures/Grids/ds_grid_translate.md", "signature": "ds_grid_translate(grid, horiz, vert)", "summary": "Shifts the contents of a grid by a given number of rows and columns.", "timestamp": 1654590596}, "ds_list_add_list": {"path": "/Data_Structures/Lists/ds_list_add_list.md", "signature": "ds_list_add_list(parent, list)", "summary": "Adds a list to a given list and marks it.", "timestamp": 1654991024}, "ds_list_add_map": {"path": "/Data_Structures/Lists/ds_list_add_map.md", "signature": "ds_list_add_map(parent, map)", "summary": "Adds a map to a given list and marks it.", "timestamp": 1654991031}, "ds_list_cv": {"path": "/Data_Structures/Lists/ds_list_cv.md", "signature": "ds_list_cv(list, sample)", "summary": "Returns the coefficient of variation for values in a list.", "timestamp": 1654991038}, "ds_list_flip": {"path": "/Data_Structures/Lists/ds_list_flip.md", "signature": "ds_list_flip(list)", "summary": "Rearranges the values of a list in reverse order.", "timestamp": 1654991047}, "ds_list_geometric_mean": {"path": "/Data_Structures/Lists/ds_list_geometric_mean.md", "signature": "ds_list_geometric_mean(list)", "summary": "Returns the geometric mean of values in a list.", "timestamp": 1654991055}, "ds_list_max": {"path": "/Data_Structures/Lists/ds_list_max.md", "signature": "ds_list_max(list)", "summary": "Returns the maximum value in a list.", "timestamp": 1654991067}, "ds_list_mean": {"path": "/Data_Structures/Lists/ds_list_mean.md", "signature": "ds_list_mean(list)", "summary": "Returns the arithmetic mean of values in a list.", "timestamp": 1654991075}, "ds_list_median": {"path": "/Data_Structures/Lists/ds_list_median.md", "signature": "ds_list_median(list)", "summary": "Returns the median of the values in the given list.", "timestamp": 1654991080}, "ds_list_min": {"path": "/Data_Structures/Lists/ds_list_min.md", "signature": "ds_list_min(list)", "summary": "Returns the minimum value in a list.", "timestamp": 1654991086}, "ds_list_pop_standard_deviation": {"path": "/Data_Structures/Lists/ds_list_pop_standard_deviation.md", "signature": "ds_list_pop_standard_deviation(list)", "summary": "Returns the population standard deviation for values in a list.", "timestamp": 1654993103}, "ds_list_range": {"path": "/Data_Structures/Lists/ds_list_range.md", "signature": "ds_list_range(list)", "summary": "Returns the range of the values in a list.", "timestamp": 1654991109}, "ds_list_select_relative": {"path": "/Data_Structures/Lists/ds_list_select_relative.md", "signature": "ds_list_select_relative(current, delta, list)", "summary": "Returns a value from a list data structure in a position relative to a given value.", "timestamp": 1654991120}, "ds_list_select_relative_wrap": {"path": "/Data_Structures/Lists/ds_list_select_relative_wrap.md", "signature": "ds_list_select_relative_wrap(current, delta, list)", "summary": "Returns a value from a list data structure in a position relative to a given value.", "timestamp": 1654991126}, "ds_list_standard_deviation": {"path": "/Data_Structures/Lists/ds_list_standard_deviation.md", "signature": "ds_list_standard_deviation(list, sample)", "summary": "Returns the standard deviation for values in a list.", "timestamp": 1654991135}, "ds_list_standard_score": {"path": "/Data_Structures/Lists/ds_list_standard_score.md", "signature": "ds_list_standard_score(list, pos)", "summary": "Returns the standard score (z-score) of the value at a position in a list.", "timestamp": 1654991144}, "ds_list_sum": {"path": "/Data_Structures/Lists/ds_list_sum.md", "signature": "ds_list_sum(list)", "summary": "Returns the sum of all values in a list.", "timestamp": 1654991153}, "ds_list_sum_of_squares": {"path": "/Data_Structures/Lists/ds_list_sum_of_squares.md", "signature": "ds_list_sum_of_squares(list)", "summary": "Returns the sum of squares of all values in a list.", "timestamp": 1654991217}, "ds_list_sum_squares": {"path": "/Data_Structures/Lists/ds_list_sum_squares.md", "signature": "ds_list_sum_squares(list)", "summary": "Returns the sum of squares of all values in a given list.", "timestamp": 1654991175}, "ds_list_variance": {"path": "/Data_Structures/Lists/ds_list_variance.md", "signature": "ds_list_variance(list, sample)", "summary": "Returns the variance of the values in a given list.", "timestamp": 1654991306}, "ds_list_vmr": {"path": "/Data_Structures/Lists/ds_list_vmr.md", "signature": "ds_list_vmr(list, sample)", "summary": "Returns the variance-to-mean ratio of values in a list.", "timestamp": 1654991312}, "ds_map_clone": {"path": "/Data_Structures/Maps/ds_map_clone.md", "signature": "ds_map_clone(map)", "summary": "Clones a map simply to a new copy and returns the created map.", "timestamp": 1476409527}, "ds_map_deep_clone": {"path": "/Data_Structures/Maps/ds_map_deep_clone.md", "signature": "ds_map_deep_clone(map)", "summary": "Clones a map deeply to a new copy, cloning any nested maps and lists, and returning the created root map.", "timestamp": 1476409521}, "ds_map_default_value": {"path": "/Data_Structures/Maps/ds_map_default_value.md", "signature": "ds_map_default_value(map,key,val)", "summary": "Returns the value of a key from a given map, inserting a default value into the map if the key does not yet exist.", "timestamp": 1476409532}, "ds_map_load": {"path": "/Data_Structures/Maps/ds_map_load.md", "signature": "ds_map_load(file [,delim])", "summary": "Loads the contents of a file into a new map data structure, returning its id.", "timestamp": 1405807863}, "ds_map_mirror": {"path": "/Data_Structures/Maps/ds_map_mirror.md", "signature": "ds_map_mirror(id)", "summary": "Exchanges map keys with map values.", "timestamp": 1405807842}, "ds_map_save": {"path": "/Data_Structures/Maps/ds_map_save.md", "signature": "ds_map_save(id, file [,delim])", "summary": "Saves the contents of a given grid data structure into a file.", "timestamp": 1405807896}, "file_bin_read_word": {"path": "/Files/Input_and_Output/file_bin_read_word.md", "signature": "file_bin_read_word(file,size,bigend)", "summary": "Returns a word value of a given byte-size from an open binary file.", "timestamp": 1405809410}, "file_bin_seek_relative": {"path": "/Files/Input_and_Output/file_bin_seek_relative.md", "signature": "file_bin_seek_relative(file,pos)", "summary": "Sets the file seek pointer of an open binary file to a position relative to its current position.", "timestamp": 1405809712}, "file_bin_write_word": {"path": "/Files/Input_and_Output/file_bin_write_word.md", "signature": "file_bin_write_word(file,size,bigend,value)", "summary": "Writes a binary word of a given byte-size to an open binary file.", "timestamp": 1405809421}, "file_text_open_read_all": {"path": "/Files/Input_and_Output/file_text_open_read_all.md", "signature": "file_text_open_read_all(fname)", "summary": "Returns the contents of a given file as a multiline string.", "timestamp": 1474770888}, "file_text_open_write_all": {"path": "/Files/Input_and_Output/file_text_open_write_all.md", "signature": "file_text_open_write_all(fname,str)", "summary": "Writes a multiline string to a given file.", "timestamp": 1474771024}, "save_screenshot": {"path": "/Files/Input_and_Output/save_screenshot.md", "signature": "save_screenshot(name,folder)", "summary": "Saves a successively numbered screenshot within the working directory.", "timestamp": 1424060015}, "intercept_course": {"path": "/Game_Play/Artificial_Intelligence/intercept_course.md", "signature": "intercept_course(origin,target,speed)", "summary": "Returns the course direction required to hit a moving target at a given projectile speed, or (-1) if no solution is found.", "timestamp": 1405810958}, "motion_predict": {"path": "/Game_Play/Artificial_Intelligence/motion_predict.md", "signature": "motion_predict(instance,steps)", "summary": "Returns a list data structure populated with the predicted positions {x1,y1, x2,y2, ... , xsteps,ysteps} of an instance with regard to its current motion, friction, and gravity.", "timestamp": 1405810420}, "collision_line_first": {"path": "/Game_Play/Collisions/collision_line_first.md", "signature": "collision_line_first(x1,y1,x2,y2,object,prec,notme)", "summary": "Returns the instance id of an object colliding with a given line and closest to the first point, or noone if no instance found.", "timestamp": 1405962794}, "collision_normal": {"path": "/Game_Play/Collisions/collision_normal.md", "signature": "collision_normal(x, y, obj, radius, spacing)", "summary": "Returns a 2D \"surface normal\" at a point on or near an instance within a test area.", "timestamp": 1656494917}, "collision_triangle": {"path": "/Game_Play/Collisions/collision_triangle.md", "signature": "collision_triangle(x1, y1, x2, y2, x3, y3, object)", "summary": "Returns an object instance id that collides with a given triangle.", "timestamp": 1654229217}, "range_finder": {"path": "/Game_Play/Collisions/range_finder.md", "signature": "range_finder(x,y,dir,range,object,prec,notme)", "summary": "Returns the exact distance to the nearest instance of an object in a given direction from a given point, or noone if no instance is found.", "timestamp": 1405962711}, "deceleration_distance": {"path": "/Game_Play/Instances/deceleration_distance.md", "signature": "deceleration_distance(speed,friction)", "summary": "Returns the distance travelled by an object moving at a given speed and with a given rate of deceleration.", "timestamp": 1405969415}, "instance_closest_approach": {"path": "/Game_Play/Instances/instance_closest_approach.md", "signature": "instance_closest_approach(inst[,time])", "summary": "Returns the distance in pixels (or time in steps) until the calling and given instances are at their nearest separation based on their current positions and speeds.", "timestamp": 1405969300}, "instance_find_enemy": {"path": "/Game_Play/Instances/instance_find_enemy.md", "signature": "instance_find_enemy(object)", "summary": "Returns the nearest instance of an object whose local variable \"team\" has a different value than the calling instance, or noone if no instance is found.", "timestamp": 1405969045}, "instance_find_friend": {"path": "/Game_Play/Instances/instance_find_friend.md", "signature": "instance_find_friend(object)", "summary": "Returns the nearest instance of an object whose local variable \"team\" has the same value as calling instance, or noone if no instance is found.", "timestamp": 1405969069}, "instance_find_team": {"path": "/Game_Play/Instances/instance_find_team.md", "signature": "instance_find_team(object,team)", "summary": "Returns the nearest instance of an object whose local variable \"team\" has the same value as a given team, or noone if no instance is found.", "timestamp": 1405969088}, "instance_nearest_notme": {"path": "/Game_Play/Instances/instance_nearest_notme.md", "signature": "instance_nearest_notme(x,y,obj)", "summary": "Returns the nearest instance to a given point, disregarding the calling instance.", "timestamp": 1435722956}, "instance_nth_farthest": {"path": "/Game_Play/Instances/instance_nth_farthest.md", "signature": "instance_nth_farthest(x,y,obj,n)", "summary": "Returns the id of the nth farthest instance of an object from a given point or noone if none is found.", "timestamp": 1405968625}, "instance_nth_nearest": {"path": "/Game_Play/Instances/instance_nth_nearest.md", "signature": "instance_nth_nearest(x,y,obj,n)", "summary": "Returns the id of the nth nearest instance of an object to a given point or noone if none is found.", "timestamp": 1405968563}, "instance_singleton": {"path": "/Game_Play/Instances/instance_singleton.md", "signature": "instance_singleton(object)", "summary": "Returns a single instance of the given object, creating one if no instance exists.", "timestamp": 1435721905}, "ease_towards_direction": {"path": "/Game_Play/Movement/ease_towards_direction.md", "signature": "ease_towards_direction(target,rate,easing)", "summary": "Rotates the calling instance towards the target direction, at a given rate and easing.", "timestamp": 1405975367}, "jump_to_mouse": {"path": "/Game_Play/Movement/jump_to_mouse.md", "signature": "jump_to_mouse()", "summary": "Moves the calling instance to the position of the mouse cursor.", "timestamp": 1424053639}, "move_bounce_rectangle": {"path": "/Game_Play/Movement/move_bounce_rectangle.md", "signature": "move_bounce_rectangle(x1,y1,x2,y2)", "summary": "Makes the calling instance reverse direction if it is colliding with the boundary of a given rectangle.", "timestamp": 1405976674}, "move_follow": {"path": "/Game_Play/Movement/move_follow.md", "signature": "move_follow(object,speed)", "summary": "Makes the calling instance follow a given instance at a given speed.", "timestamp": 1405976173}, "move_to_line": {"path": "/Game_Play/Movement/move_to_line.md", "signature": "move_to_line(x1,y1,x2,y2,segment)", "summary": "Moves the calling instance to the nearest point on a given line or line segment.", "timestamp": 1405976758}, "turn_towards_direction": {"path": "/Game_Play/Movement/turn_towards_direction.md", "signature": "turn_towards_direction(target,rate)", "summary": "Rotates the calling instance towards the target direction, at a given rate.", "timestamp": 1405975985}, "d3d_model_copy": {"path": "/Graphics/3D/d3d_model_copy.md", "signature": "d3d_model_copy(model)", "summary": "Returns a model index of a copy of a given model.", "timestamp": 1406067143}, "draw_background_tiled_area": {"path": "/Graphics/Backgrounds/draw_background_tiled_area.md", "signature": "draw_background_tiled_area(background,x,y,x1,y2,x2,y2)", "summary": "Draws a repeated background image, tiled to fill a given region and with a given offset.", "timestamp": 1424060024}, "draw_background_tiled_area_ext": {"path": "/Graphics/Backgrounds/draw_background_tiled_area_ext.md", "signature": "draw_background_tiled_area_ext(background,x,y,x1,y2,x2,y2,color,alpha)", "summary": "Draws a repeated background image, tiled to fill a given region and with a given offset.", "timestamp": 1424060026}, "color_mix": {"path": "/Graphics/Color/color_mix.md", "signature": "color_mix(color1,color2)", "summary": "Returns a 50/50 mixture of the two given colors.", "timestamp": 1406139275}, "color_multiply": {"path": "/Graphics/Color/color_multiply.md", "signature": "color_multiply(color1,color2)", "summary": "Returns the product of the two given colors.", "timestamp": 1406139283}, "color_scale": {"path": "/Graphics/Color/color_scale.md", "signature": "color_scale(color,scale)", "summary": "Returns a given color with each component scaled by a factor.", "timestamp": 1406089190}, "color_to_cmyk": {"path": "/Graphics/Color/color_to_cmyk.md", "signature": "color_to_cmyk(color [, channel])", "summary": "Returns a list data structure populated by CMYK values of a color, or optionally, the value of a specific color channel.", "timestamp": 1406137329}, "color_to_hex": {"path": "/Graphics/Color/color_to_hex.md", "signature": "color_to_hex(color)", "summary": "Returns a given color as a hexadecimal string in RRGGBB format.", "timestamp": 1406088891}, "color_to_wavelength": {"path": "/Graphics/Color/color_to_wavelength.md", "signature": "color_to_wavelength(color)", "summary": "Returns the approximate wavelength of a given color in nanometers.", "timestamp": 1406089132}, "hex_to_color": {"path": "/Graphics/Color/hex_to_color.md", "signature": "hex_to_color(hex)", "summary": "Returns an RGB color from a given hexadecimal color code.", "timestamp": 1406089833}, "hex_to_rgb": {"path": "/Graphics/Color/hex_to_rgb.md", "signature": "hex_to_rgb(hex)", "summary": "Returns a list data structure populated by RGB color component values.", "timestamp": 1406091829}, "make_color_random": {"path": "/Graphics/Color/make_color_random.md", "signature": "make_color_random()", "summary": "Returns a random color.", "timestamp": 1406091875}, "merge_colors": {"path": "/Graphics/Color/merge_colors.md", "signature": "merge_colors(col1,col2,...,amount)", "summary": "Returns a color merged from a series of two or more colors by a given amount.", "timestamp": 1496884411}, "merge_color_squared": {"path": "/Graphics/Color/merge_color_squared.md", "signature": "merge_color_squared(col1,col2,amount)", "summary": "Returns a color merged from two colors by a given amount, where color components are squared for a more natural mix.", "timestamp": 1496884400}, "rgb_to_cmyk": {"path": "/Graphics/Color/rgb_to_cmyk.md", "signature": "rgb_to_cmyk(r,g,b [,channel])", "summary": "Returns a list data structure populated by CMYK values of a color, or optionally, the value of a specific color channel.", "timestamp": 1406137367}, "rgb_to_hex": {"path": "/Graphics/Color/rgb_to_hex.md", "signature": "rgb_to_hex(r,g,b)", "summary": "Returns a given color as a hexadecimal string in RRGGBB format.", "timestamp": 1406139231}, "wavelength_to_hue": {"path": "/Graphics/Color/wavelength_to_hue.md", "signature": "wavelength_to_hue(nano)", "summary": "Returns the approximate HSV color hue [0..255] of a given wavelength.", "timestamp": 1406139211}, "draw_arc": {"path": "/Graphics/Drawing/draw_arc.md", "signature": "draw_arc(x1,y1,x2,y2,x3,y3,x4,y4,precision)", "summary": "Draws an arc of an ellipse mimicking draw_arc() from GM5.", "timestamp": 1406141219}, "draw_chord": {"path": "/Graphics/Drawing/draw_chord.md", "signature": "draw_chord(x1,y1,x2,y2,x3,y3,x4,y4,outline,precision)", "summary": "Draws a chord of an elliptical disk mimicing draw_chord() from GM5.", "timestamp": 1406143199}, "draw_crosshair": {"path": "/Graphics/Drawing/draw_crosshair.md", "signature": "draw_crosshair(x,y)", "summary": "Draws a pair of horizontal and vertical lines, spanning the room and intersecting a given point.", "timestamp": 1406141723}, "draw_crosshair_ext": {"path": "/Graphics/Drawing/draw_crosshair_ext.md", "signature": "draw_crosshair_ext(x,y,col1,col2,col3,col4)", "summary": "Draws a pair of horizontal and vertical lines, spanning the room and intersecting a given point.", "timestamp": 1406141718}, "draw_crosshair_width": {"path": "/Graphics/Drawing/draw_crosshair_width.md", "signature": "draw_crosshair_width(x,y)", "summary": "Draws a pair of horizontal and vertical lines of a given width, spanning the room and intersecting a given point.", "timestamp": 1406141741}, "draw_crosshair_width_ext": {"path": "/Graphics/Drawing/draw_crosshair_width_ext.md", "signature": "draw_crosshair_width_ext(x,y,width,col1,col2,col3,col4)", "summary": "Draws a pair of horizontal and vertical lines, spanning the room and intersecting a given point.", "timestamp": 1406141789}, "draw_curve": {"path": "/Graphics/Drawing/draw_curve.md", "signature": "draw_curve(x1,y1,x2,y2,direction,detail)", "summary": "Draws a curve between two points with a given starting angle.", "timestamp": 1474769583}, "draw_pie": {"path": "/Graphics/Drawing/draw_pie.md", "signature": "draw_pie(x1,y1,x2,y2,x3,y3,x4,y4,outline,precision)", "summary": "Draws a sector of an elliptical disc, mimicking draw_pie() from GM5.", "timestamp": 1406143189}, "draw_rectangle_dashed": {"path": "/Graphics/Drawing/draw_rectangle_dashed.md", "signature": "draw_rectangle_dashed(x1, y1, x2, y2, size, center)", "summary": "Draws a rectangle made of dashes of a given size.", "timestamp": 1655009279}, "draw_rectangle_dashed_color": {"path": "/Graphics/Drawing/draw_rectangle_dashed_color.md", "signature": "draw_rectangle_dashed_color(x1, y1, x2, y2, col1, col2, col3, col4, size, center)", "summary": "Draws a rectangle made of dashes of a given size.", "timestamp": 1655009301}, "draw_rectangle_inverted": {"path": "/Graphics/Drawing/draw_rectangle_inverted.md", "signature": "draw_rectangle_inverted(x1, y1, x2, y2)", "summary": "Draws a rectangle which inverts the colors beneath it.", "timestamp": 1655019762}, "draw_roundrect_ext": {"path": "/Graphics/Drawing/draw_roundrect_ext.md", "signature": "draw_roundrect_ext(x1,y1,x2,y2,outline,radius,precision)", "summary": "Draws a rectangle with rounded corners.", "timestamp": 1474767545}, "shader_set_uniform_color": {"path": "/Graphics/Shaders/shader_set_uniform_color.md", "signature": "shader_set_uniform_color(uniform,color,alpha)", "summary": "Sets a vec4 shader uniform with a color and alpha value.", "timestamp": 1427688602}, "shader_set_uniform_rgba": {"path": "/Graphics/Shaders/shader_set_uniform_rgba.md", "signature": "shader_set_uniform_rgba(uniform,r,g,b,a)", "summary": "Sets a vec4 shader uniform with red, green, blue, and alpha values.", "timestamp": 1427688604}, "draw_self_shear": {"path": "/Graphics/Sprites/draw_self_shear.md", "signature": "draw_self_shear(xshear, yshear)", "summary": "Draws an instance sprite with shearing applied.", "timestamp": 1757626108}, "draw_sprite_flip_ext": {"path": "/Graphics/Sprites/draw_sprite_flip_ext.md", "signature": "draw_sprite_flip_ext(sprite,subimg,x,y,xscale,yscale,rot,color,alpha,fliph,flipv)", "summary": "Draws a sprite in the same manner as draw_sprite_ext() and can also flip the sprite horizontally and/or vertically.", "timestamp": 1406160324}, "draw_sprite_halfpixel": {"path": "/Graphics/Sprites/draw_sprite_halfpixel.md", "signature": "draw_sprite_halfpixel(sprite, subimg, x, y, xscale, yscale, rot, color, alpha)", "summary": "Draws a sprite transformed about the center of its origin pixel instead of the top-left corner.", "timestamp": 1424059977}, "draw_sprite_inverted": {"path": "/Graphics/Sprites/draw_sprite_inverted.md", "signature": "draw_sprite_inverted(sprite, subimg, x, y)", "summary": "Draws a sprite with inverted colors.", "timestamp": 1757810183}, "draw_sprite_inverted_ext": {"path": "/Graphics/Sprites/draw_sprite_inverted_ext.md", "signature": "draw_sprite_inverted_ext(sprite, subimg, x, y, xscale, yscale, rot, color, alpha)", "summary": "Draws a sprite with inverted colors and standard transformations and blending.", "timestamp": 1757810181}, "draw_sprite_percent": {"path": "/Graphics/Sprites/draw_sprite_percent.md", "signature": "draw_sprite_percent(sprite,percent,x,y,restrict)", "summary": "Draws a sprite using a percentage to select a subimage to draw, the first subimage at 0% and the last subimage at 100%.", "timestamp": 1406161207}, "draw_sprite_rectangle": {"path": "/Graphics/Sprites/draw_sprite_rectangle.md", "signature": "draw_sprite_rectangle(sprite,subimg,x1,y1,x2,y2,left,top,right,bottom)", "summary": "Draws a rectangle using a sprite sliced into 9 sections.", "timestamp": 1430590776}, "draw_sprite_shear": {"path": "/Graphics/Sprites/draw_sprite_shear.md", "signature": "draw_sprite_shear(sprite, subimg, x, y, xshear, yshear)", "summary": "Draws a given sprite sheared by a given amount.", "timestamp": 1757625941}, "draw_sprite_shear_ext": {"path": "/Graphics/Sprites/draw_sprite_shear_ext.md", "signature": "draw_sprite_shear_ext(sprite, subimg, x, y, xshear, yshear, xscale, yscale, rot, color, alpha)", "summary": "Draws a given sprite with standard transformations and shearing applied.", "timestamp": 1757625992}, "draw_sprite_stretched_direction": {"path": "/Graphics/Sprites/draw_sprite_stretched_direction.md", "signature": "draw_sprite_stretched_direction(sprite,subimg,x,y,scale,dir)", "summary": "Draws a sprite scaled along an arbitrary axis.", "timestamp": 1406161371}, "draw_sprite_tiled_area": {"path": "/Graphics/Sprites/draw_sprite_tiled_area.md", "signature": "draw_sprite_tiled_area(sprite,subimg,x,y,x1,y2,x2,y2)", "summary": "Draws a repeated sprite image, tiled to fill a given region and with a given offset.", "timestamp": 1424060030}, "draw_sprite_tiled_area_ext": {"path": "/Graphics/Sprites/draw_sprite_tiled_area_ext.md", "signature": "draw_sprite_tiled_area_ext(sprite,subimg,x,y,x1,y2,x2,y2,color,alpha)", "summary": "Draws a repeated sprite image, tiled to fill a given region and with a given offset.", "timestamp": 1424060033}, "draw_sprite_wave": {"path": "/Graphics/Sprites/draw_sprite_wave.md", "signature": "draw_sprite_wave(sprite, subimg, x, y, axis, wavelength, amplitude, phase)", "summary": "Draws a sprite with wave-like distortion.", "timestamp": 1757779454}, "draw_sprite_wave_ext": {"path": "/Graphics/Sprites/draw_sprite_wave_ext.md", "signature": "draw_sprite_wave_ext(sprite, subimg, x, y, axis, wavelength, amplitude, phas, xscale, yscale, color, alpha)", "summary": "Draws a sprite with wave-like distortion.", "timestamp": 1757779443}, "motion_blur": {"path": "/Graphics/Sprites/motion_blur.md", "signature": "motion_blur(length,direction)", "summary": "Draws the assigned sprite of the calling instance, using its subimage, position, scaling, rotation, and blending settings, with a motion blur effect applied to it.", "timestamp": 1406165891}, "draw_surface_center": {"path": "/Graphics/Surfaces/draw_surface_center.md", "signature": "draw_surface_center(surface, cx, cy)", "summary": "Draws surface centered at given point.", "timestamp": 1689450914}, "draw_surface_center_ext": {"path": "/Graphics/Surfaces/draw_surface_center_ext.md", "signature": "draw_surface_center_ext(surface, cx, cy, xscale, yscale, rot, color, alpha)", "summary": "Draws surface centered at given point with scaling, rotation, and blending.", "timestamp": 1689450924}, "draw_surface_center_rotate": {"path": "/Graphics/Surfaces/draw_surface_center_rotate.md", "signature": "draw_surface_center_rotate(surface, cx, cy, rot)", "summary": "Draws surface centered at given point with rotation.", "timestamp": 1689450936}, "surface_create_clear": {"path": "/Graphics/Surfaces/surface_create_clear.md", "signature": "surface_create_clear(width, height, color, alpha)", "summary": "Creates surface cleared with given color and alpha values.", "timestamp": 1689450961}, "draw_text_shadow": {"path": "/Graphics/Text/draw_text_shadow.md", "signature": "draw_text_shadow(x,y,str,color,shadow,intensity,distance,direction)", "summary": "Draws a given string with a simple shadow effect applied to it.", "timestamp": 1406071323}, "string_limit_width": {"path": "/Graphics/Text/string_limit_width.md", "signature": "string_limit_width(string,width,ext)", "summary": "Returns a given string.", "timestamp": 1406778314}, "string_wordwrap_width": {"path": "/Graphics/Text/string_wordwrap_width.md", "signature": "string_wordwrap_width(string,width,break,split)", "summary": "Returns a given string, word wrapped to a pixel width, with line break characters inserted between words.", "timestamp": 1636335000}, "joystick_get_button": {"path": "/Interaction/Gamepad/joystick_get_button.md", "signature": "joystick_get_button(id)", "summary": "Returns a button number of a given joystick, if pressed, or 0 if no button is pressed.", "timestamp": 1406066761}, "draw_get_button": {"path": "/Interaction/Mouse/draw_get_button.md", "signature": "draw_get_button(x,y,str,width,height,color,hover,bgcolor)", "summary": "Draws a simple labeled button on the screen and returns true if it has been clicked using the left mouse button.", "timestamp": 1406066546}, "device_is_desktop": {"path": "/Platform/Device/device_is_desktop.md", "signature": "device_is_desktop()", "summary": "Returns whether or not the current device is a desktop, workstation or laptop.", "timestamp": 1474769583}, "map_backgrounds": {"path": "/Resources/Management/map_backgrounds.md", "signature": "map_backgrounds(map)", "summary": "Fills a given map data structure with the id values of all background resources, keyed by strings of their names.", "timestamp": 1474769583}, "map_fonts": {"path": "/Resources/Management/map_fonts.md", "signature": "map_fonts(map)", "summary": "Fills a given map data structure with the id values of all font resources, keyed by strings of their names.", "timestamp": 1406059890}, "map_objects": {"path": "/Resources/Management/map_objects.md", "signature": "map_objects(map)", "summary": "Fills a given map data structure with the id values of all object resources, keyed by strings of their names.", "timestamp": 1406059897}, "map_paths": {"path": "/Resources/Management/map_paths.md", "signature": "map_paths(map)", "summary": "Fills a given map data structure with the id values of all path resources, keyed by strings of their names.", "timestamp": 1406059903}, "map_rooms": {"path": "/Resources/Management/map_rooms.md", "signature": "map_rooms(map)", "summary": "Fills a given map data structure with the id values of all room resources, keyed by strings of their names.", "timestamp": 1406065735}, "map_sounds": {"path": "/Resources/Management/map_sounds.md", "signature": "map_sounds(map,file)", "summary": "Fills a given map data structure with the id values of all sound resources, keyed by strings of their names.", "timestamp": 1406060204}, "map_sprites": {"path": "/Resources/Management/map_sprites.md", "signature": "map_sprites(map)", "summary": "Fills a given map data structure with the id values of all sprite resources, keyed by strings of their names.", "timestamp": 1474769583}, "map_timelines": {"path": "/Resources/Management/map_timelines.md", "signature": "map_timelines(map)", "summary": "Fills a given map data structure with the id values of all timeline resources, keyed by strings of their names.", "timestamp": 1406059935}, "sprite_desaturate": {"path": "/Resources/Sprites/sprite_desaturate.md", "signature": "sprite_desaturate(sprite)", "summary": "Changes a sprite into a grayscale version of itself.", "timestamp": 1424053646}, "sprite_edit_begin": {"path": "/Resources/Sprites/sprite_edit_begin.md", "signature": "sprite_edit_begin(sprite)", "summary": "Edit a sprite dynamically using drawing commands.", "timestamp": 1424053642}, "sprite_invert_color": {"path": "/Resources/Sprites/sprite_invert_color.md", "signature": "sprite_invert_color(sprite)", "summary": "Inverts the colors of a given sprite.", "timestamp": 1736220207}, "sprite_replace_color": {"path": "/Resources/Sprites/sprite_replace_color.md", "signature": "sprite_replace_color(sprite,oldcolor,newcolor)", "summary": "Replaces one color in a given sprite with another.", "timestamp": 1424059730}, "sprite_replace_color_blend": {"path": "/Resources/Sprites/sprite_replace_color_blend.md", "signature": "sprite_replace_color_blend(sprite,oldcolor,newcolor,htol,stol,vtol,blend)", "summary": "Replaces one range of colors of a given sprite with another.", "timestamp": 1424059755}}